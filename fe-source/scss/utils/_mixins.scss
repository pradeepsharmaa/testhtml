// A mixin to include retina images for HDPI devices
// Bourbon Retina helper would be better for this
// @retina-image($filename, $background-size, $extension*, $retina-filename*, $retina-suffix*, $asset-pipeline*)
// Docs: http://bourbon.io/docs/#retina-image
@mixin image-2x($image, $width, $height) {
    @media (min--moz-device-pixel-ratio: 1.3),
    (-o-min-device-pixel-ratio: 2.6/2),
    (-webkit-min-device-pixel-ratio: 1.3),
    (min-device-pixel-ratio: 1.3),
    (min-resolution: 1.3dppx) {
        background-image: url($image);
        background-size: $width $height;
    }
}


//mixin for icons
@mixin icon($name:'') {
    background-image: url('../icons/'+$name+'.svg');
    background-repeat: no-repeat;
    content: '';
}
 
@mixin simonicon($name:'') {
    font-family:'simon-icon';
    font-weight:normal;
    content: $name;
}

@mixin placeholderuppercase($uppercase){
    ::-webkit-input-placeholder { /* WebKit browsers */
        text-transform: $uppercase;
        color : $text-link;
    }
    :-moz-placeholder { /* Mozilla Firefox 4 to 18 */
        text-transform: $uppercase;
        color : $text-link;
    }
    ::-moz-placeholder { /* Mozilla Firefox 19+ */
        text-transform: $uppercase;
        color : $text-link;
    }
    :-ms-input-placeholder { /* Internet Explorer 10+ */
        text-transform: $uppercase;
        color : $text-link;
    }
}

@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}

@mixin translate ($x,
$y) {
    @include transform(translate($x, $y));
}


// A Responsive breakpoint utility
@mixin breakpoint($point,
$value: 0) {
    @if $point==mobile {
        @media (min-width: $bp-mobile-min) and (max-width: $bp-mobile-max) {
            @content;
        }
    }
    @else if $point==desktop {
        @media (min-width: $bp-desktop-min) {
            @content;
        }
    } @else if $point==desktop-medium {
        @media (min-width: $bp-desktop-min) and (max-width: $bp-desktop-medium) {
            @content;
        }
    }
    @else {
        @media ($point: $value) {
            @content;
        }
    }
}

// A Responsive breakpoint utility for between breakpint edge cases
@mixin between-breakpoints($min,
$max) {
    @media (min-width: $min) and (max-width: $max) {
        @content;
    }
}



@mixin table($tabletype: table,
$align: middle) {
    display: $tabletype;
    height: 100%;
    >* {
        display: table-cell;
        vertical-align: $align;
    }
}

// Vertical Alginment for IE9+
@mixin vertical-align {
    position: relative;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}

/// Horizontal Alginment for IE9+
@mixin horizontal-align {
    position: relative;
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translateX(-50%);
}

/// Center Alginment for IE9+
@mixin center-align {
    left: 50%;
    top: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
}

